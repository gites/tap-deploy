#
# Copyright (c) 2017 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---

- name: BLOB-STORE Get CertKey
  uri:
    url: "http://{{ ca_service_clusterip }}/api/v1/certkey/blob-store"
    method: GET
    user: "{{ ca_service.user }}"
    password: "{{ hostvars[groups['k8s-master'][0]].passwords.ca_service.pass }}"
    force_basic_auth: yes
    status_code: 200
    return_content: yes
    timeout: 60
  register: certkey

- name: BLOB-STORE create cert and key secret for nginx
  tapkube:
    api_endpoint: "127.0.0.1:{{ k8s_api_insecure_port }}"
    insecure: true
    inline_data:
      kind: "Secret"
      metadata:
        name: "blob-store-nginx-certkey"
      data:
        ssl.crt: "{{ certkey.json['cert'] | b64encode }}"
        ssl.key: "{{ certkey.json['key'] | b64encode }}"

- name: BLOB-STORE Create blob-store kubernetes service
  tapkube:
    api_endpoint: "127.0.0.1:{{ k8s_api_insecure_port }}"
    insecure: true
    inline_data:
      apiVersion: v1
      kind: Service
      metadata:
        labels:
          name: blob-store
        name: blob-store
      spec:
        ports:
          - port: 80
            protocol: "TCP"
            name: "rest"
          - port: 443
            protocol: "TCP"
            name: "rest-ssl"
        selector:
          app: blob-store
        type: ClusterIP
    state: present

- name: BLOB-STORE Create a ConfigMap instance for blob-store
  tapkube:
    api_endpoint: "127.0.0.1:{{ k8s_api_insecure_port }}"
    insecure: true
    inline_data:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: blob-store
        labels:
          app: blob-store
      data:
        broker-log-level: "INFO"
        endpoint: "blob-store:443"
        kubernetes-service-name: "BLOB_STORE"
        host: "blob-store"
        port: "80"
        ssl-port: "443"
        user: "admin"
        pass: "password"

- name: BLOB-STORE Create a ConfigMap instance for minio
  tapkube:
    api_endpoint: "127.0.0.1:{{ k8s_api_insecure_port }}"
    insecure: true
    inline_data:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: minio
        labels:
          app: minio
      data:
        broker-log-level: "INFO"
        hostname: "localhost"
        port: "9000"
        storage-path: "/opt/app/store"

- name: BLOB-STORE Create a Secret instance for minio
  tapkube:
    api_endpoint: "127.0.0.1:{{ k8s_api_insecure_port }}"
    insecure: true
    inline_data:
      kind: Secret
      apiVersion: v1
      metadata:
        name: minio
      type: Opaque
      data:
        access-key: c2VjcmV0X2FjY2Vzc19rZXk=
        secret-key: c3VwZXItc2VjcmV0LU1JTkkwLXNlcnZlci1rZXk=
    state: present

- name: BLOB-STORE Create blob store and minio deployment instance
  tapkube:
    api_endpoint: "127.0.0.1:{{ k8s_api_insecure_port }}"
    insecure: true
    inline_data: "{{ lookup('template', 'apps/blob-store.deployment.j2') }}"
    state: present
  register: deploy_details


