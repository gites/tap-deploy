#
# Copyright (c) 2017 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---

- name: Create a ConfigMap instance
  tapkube:
    api_endpoint: "127.0.0.1:{{ k8s_api_insecure_port }}"
    insecure: true
    inline_data:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: private-tap-repo-secret
        labels:
          id: private-tap-repo-secret
      data:
        .dockercfg: eyJ0YXBpbWFnZXMudXMuZW5hYmxlaW90LmNvbTo4MDgwIjp7InVzZXJuYW1lIjoic2N0ZXN0ZXIiLCJwYXNzd29yZCI6ImRvbm90Y2hhbmdlIiwiZW1haWwiOiJzY3Rlc3Rlc3RAZXhhbXBsZS5jb20iLCJhdXRoIjoiYzJOMFpYTjBaWEk2Wkc5dWIzUmphR0Z1WjJVPSJ9fQ==
    state: present
  register: config_details

- name: Create a ConfigMap instance
  tapkube:
    api_endpoint: "127.0.0.1:{{ k8s_api_insecure_port }}"
    insecure: true
    inline_data:
      kind: "ConfigMap"
      apiVersion: "v1"
      metadata:
        name: "platform"
        labels:
          id: "platform"
      data:
        domain: "{{ tap_domain_name }}"
        tap-version: "{{ tap_version }}"
        cdh-version: "{{ cdh_cluster_version }}"
        k8s-version: "{{ k8s_version }}"
        cli-version: "{{ cli_version }}"
        core-organization: "default"
        core-org-uuid: "defaultorg"
    state: present

- name: CA Get CA
  uri:
    url: "http://{{ ca_service_clusterip }}/api/v1/ca"
    method: GET
    user: "{{ ca_service.user }}"
    password: "{{ hostvars[groups['k8s-master'][0]].passwords.ca_service.pass }}"
    force_basic_auth: yes
    status_code: 200
    return_content: yes
  register: ca_cert

- name: Create SMTP Secrets
  tapkube:
    api_endpoint: "127.0.0.1:{{ k8s_api_insecure_port }}"
    insecure: true
    inline_data:
      kind: Secret
      apiVersion: v1
      metadata:
        name: smtp
      data:
        host: "{{ smtp_host | b64encode }}"
        password: "{{ smtp_password | b64encode }}"
        port: "{{ smtp_port | string | b64encode }}"
        protocol: "{{ smtp_protocol | b64encode }}"
        username: "{{ smtp_username | b64encode }}"
    state: present

- name: Create a ConfigMap instance console
  tapkube:
    api_endpoint: "127.0.0.1:{{ k8s_api_insecure_port }}"
    insecure: true
    inline_data:
      kind: ConfigMap
      apiVersion: v1
      metadata:
        name: console
      data:
        host: "{{ external_protocol }}://console.{{ tap_domain_name }}"
    state: present
