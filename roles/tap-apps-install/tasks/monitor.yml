#
# Copyright (c) 2017 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---

- name: MONITOR Create a ConfigMap instance
  tapkube:
    api_endpoint: "127.0.0.1:{{ k8s_api_insecure_port }}"
    insecure: true
    inline_data:
      kind: "ConfigMap"
      apiVersion: "v1"
      metadata:
        name: "monitor"
        labels:
          app: "monitor"
      data:
        log-level: "INFO"
        docker-image-repository: "{{ repository_uri }}"

- name: MONITOR Create a deployment
  tapkube:
    api_endpoint: "127.0.0.1:{{ k8s_api_insecure_port }}"
    insecure: true
    inline_data:
      kind: "Deployment"
      apiVersion: "extensions/v1beta1"
      metadata:
        name: monitor
        labels:
          tap_app_type: CORE
      spec:
        replicas: 1
        template:
          metadata:
            labels:
              app: monitor
          spec:
            volumes:
              - name: "monitor-ca-pem-volume"
                secret:
                  secretName: "platform-ca-root-cert"
              - name: "monitor-ca-certificates-crt-volume"
                secret:
                  secretName: "platform-ca-roots-bundle"
              - name: "monitor-hashed-ca-volume"
                secret:
                  secretName: "platform-ca-root-cert-hashed"
            containers:
              - name: "monitor"
                image: "{{ repository_uri }}/tap-monitor:{{ tap_version }}"
                volumeMounts:
                  - name: "monitor-ca-pem-volume"
                    mountPath: "/etc/ssl/certs/ca.pem"
                    subPath: ca.pem
                    readOnly: true
                  - name: "monitor-ca-certificates-crt-volume"
                    mountPath: "/etc/ssl/certs/ca-certificates.crt"
                    subPath: ca-certificates.crt
                    readOnly: true
                  - name: "monitor-hashed-ca-volume"
                    mountPath: "/etc/ssl/certs/{{ ca_cert.json['hash'] }}.0"
                    subPath: "{{ ca_cert.json['hash'] }}.0"
                    readOnly: true
                ports:
                  - containerPort: 80
                    protocol: "TCP"
                resources:
                  limits:
                    memory: "{{ monitor_memory_limit }}"
                  requests:
                    memory: "{{ monitor_memory_limit }}"
                env:
                  - name: "CATALOG_HOST"
                    valueFrom:
                      configMapKeyRef:
                        name: "catalog"
                        key: "host"
                  - name: "CATALOG_PORT"
                    valueFrom:
                      configMapKeyRef:
                        name: "catalog"
                        key: "ssl-port"
                  - name: "CATALOG_USER"
                    valueFrom:
                      configMapKeyRef:
                        name: "catalog"
                        key: "user"
                  - name: "CATALOG_PASS"
                    valueFrom:
                      configMapKeyRef:
                        name: "catalog"
                        key: "pass"
                  - name: "QUEUE_HOST"
                    valueFrom:
                      configMapKeyRef:
                        name: "queue"
                        key: "host"
                  - name: "QUEUE_PORT"
                    valueFrom:
                      configMapKeyRef:
                        name: "queue"
                        key: "port"
                  - name: "QUEUE_USER"
                    valueFrom:
                      configMapKeyRef:
                        name: "queue"
                        key: "user"
                  - name: "QUEUE_PASS"
                    valueFrom:
                      configMapKeyRef:
                        name: "queue"
                        key: "password"
                  - name: "IMAGE_FACTORY_HUB_ADDRESS"
                    valueFrom:
                      configMapKeyRef:
                        name: "image-factory"
                        key: "hub-address"
                  - name: "DOCKER_IMAGE_REPOSITORY"
                    valueFrom:
                      configMapKeyRef:
                        name: "monitor"
                        key: "docker-image-repository"
                  - name: "TEMPLATE_REPOSITORY_HOST"
                    valueFrom:
                      configMapKeyRef:
                        name: "template-repository"
                        key: "host"
                  - name: "TEMPLATE_REPOSITORY_PORT"
                    valueFrom:
                      configMapKeyRef:
                        name: "template-repository"
                        key: "ssl-port"
                  - name: "TEMPLATE_REPOSITORY_USER"
                    valueFrom:
                      configMapKeyRef:
                        name: "template-repository"
                        key: "user"
                  - name: "TEMPLATE_REPOSITORY_PASS"
                    valueFrom:
                      configMapKeyRef:
                        name: "template-repository"
                        key: "pass"
                  - name: "GENERIC_SERVICE_TEMPLATE_ID"
                    valueFrom:
                      configMapKeyRef:
                        name: "template-repository"
                        key: "generic-service-template-id"
                  - name: "CEPH_BROKER_USER"
                    valueFrom:
                      configMapKeyRef:
                        name: "container-broker"
                        key: "ceph-broker-user"
                  - name: "CEPH_BROKER_PASS"
                    valueFrom:
                      configMapKeyRef:
                        name: "container-broker"
                        key: "ceph-broker-pass"
                  - name: "CEPH_BROKER_HOST"
                    valueFrom:
                      configMapKeyRef:
                        name: "container-broker"
                        key: "ceph-broker-host"
                  - name: "CEPH_BROKER_PORT"
                    valueFrom:
                      configMapKeyRef:
                        name: "container-broker"
                        key: "ceph-broker-port"
                  - name: "BROKER_LOG_LEVEL"
                    valueFrom:
                      configMapKeyRef:
                        name: "monitor"
                        key: "log-level"
                imagePullPolicy: "Always"
            restartPolicy: "Always"
            dnsPolicy: "ClusterFirst"
    state: present
